// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id String @id @default(uuid())
  userId String @unique
  name String
  imageUrl String @db.Text
  email String @db.Text @unique

  posts Post[]
  comments Comment[]
  
  createdAt DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Post {
  id String @id @default(uuid())
  
  title String
  content String @db.Text
  imageUrl String @db.Text
  published Boolean

  authorId String
  author Profile @relation(fields: [authorId], references: [id], onDelete: Cascade)

  comments Comment[]
  
  createdAt DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Comment {
  id String @id @default(uuid())
  
  content String @db.Text

  commenterId String
  commenter Profile @relation(fields: [commenterId], references: [id], onDelete: Cascade)

  isDeleted Boolean @default(false)

  postId String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt  DateTime @updatedAt
}